[{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://mtes-mct.github.io/didoscalim/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"le-csv-augmenté","dir":"Articles","previous_headings":"","what":"Le CSV augmenté","title":"Générer un fichier csv augmenté","text":"DiDo utilise un csv augmenté avec 4 lignes d’entêtes : une description des variables le type de la variable l’unité de la variable le nom de la variable Le site de documentation de l’API propose une documentation plus complète sur le csv augmenté ainsi que sur la liste des types","code":"\"Commune\";\"Nombre de logements neufs\" \"cog_commune_2020\";\"entier\" \"n/a\";\"s/u\" \"COMMUNE\";\"LOGEMENTS_NEUFS\""},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"générer-un-csv-augmenté-","dir":"Articles","previous_headings":"","what":"Générer un CSV augmenté.","title":"Générer un fichier csv augmenté","text":"didoscalim propose une fonction pour vous aider. La génération se passe en trois étapes : le chargement du fichier d’origine : dido_read_delim() l’ajout des lignes d’entêtes spécifiques : dido_csv() l’écriture du fichier au bon format : dido_write_csv()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"le-chargement-du-fichier-dorigine","dir":"Articles","previous_headings":"","what":"le chargement du fichier d’origine","title":"Générer un fichier csv augmenté","text":"Le fichier d’origine doit être au format CSV classique, ie, la première ligne du fichier contient le nom des variables. Vous pouvez télécharger le fichier exemple utilisé. En premier lieu, charger le fichier dans un dataframe avec la commande dido_read_delim(). Si votre fichier est dans un format autre que UTF-8, vous devez l’indiquer :","code":"tbl <- dido_read_delim(\"exemple.csv\") tbl <- dido_read_delim(   \"exemple.csv\",   locale = locale(encoding = \"iso-8859-1\",   decimal_mark = ',') )"},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"lajout-des-lignes-dentêtes-spécifiques","dir":"Articles","previous_headings":"","what":"L’ajout des lignes d’entêtes spécifiques","title":"Générer un fichier csv augmenté","text":"didoscalim peut analyser le fichier et proposer un premier niveau de description. Pour aller plus loin, vous pouvez soit écrire le fichier tel quel avec dido_write_csv() et l’éditer à la main. Soit utiliser le paramètre params de la commande dido_csv(). Voici un exemple complet pour le fichier exemple :","code":"result <- dido_csv(tbl) knitr::kable(head(result, n=5)) params = list(   OPERATEUR = list(description = \"Nom de l'opérateur\"),   FILIERE = list(description = \"Filière\"),   CODE_CATEGORIE_CONSOMMATION = list(description = \"Catégorie de la consommation\"),   CODE_SECTEUR_NAF2 = list(description = \"Code NAF à 2 positions du secteur (NAF rev2 2008)\", type = \"naf_division\"),   CONSO = list(description = \"Consommation (en MWh)\", unit = \"MWh\") ) result <- dido_csv(tbl, params = params) knitr::kable(head(result, n = 5))"},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"lécriture-du-fichier-au-bon-format-","dir":"Articles","previous_headings":"","what":"L’écriture du fichier au bon format.","title":"Générer un fichier csv augmenté","text":"Vous pouvez télécharger le fichier généré","code":"dido_write_csv(result, \"resultat.csv\")"},{"path":"https://mtes-mct.github.io/didoscalim/articles/csv-augmente.html","id":"résumé-","dir":"Articles","previous_headings":"","what":"résumé.","title":"Générer un fichier csv augmenté","text":"Une fois que la configuration de params est correcte, vous pouvez chainer avec l’opérateur magrittr::%>% :","code":"library(magrittr, quietly = TRUE) dido_read_delim(\"exemple.csv\") %>%   dido_csv(params = params) %>%   dido_write_csv(\"resultat.csv\")"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"comment-utiliser-didoscalim","dir":"Articles","previous_headings":"","what":"Comment utiliser didoscalim","title":"Charger des données","text":"Afin d’éviter les erreurs de manipulation, il est conseillé de préparer ses scripts de chargement sur l’environnement ECOLE et de les passer après sur PROD. Vous trouverez plus d’info dans la vignette sur les environnements.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"créer-un-dataset","dir":"Articles","previous_headings":"","what":"Créer un dataset","title":"Charger des données","text":"Créer un dataset avec les caractéristiques suivantes :","code":"dataset <- add_dataset(   title = \"Données de consommation fictive\",   description = \"test\",   topic = \"Transports\",   temporal_coverage_start = \"2020-01-01\",   temporal_coverage_end = \"2020-12-31\",   frequency = \"annual\",   frequency_date = \"2021-10-10\" ) #> dataset `Données de consommation fictive` créé"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"créer-un-datafile-dans-ce-dataset","dir":"Articles","previous_headings":"Créer un dataset","what":"créer un datafile dans ce dataset","title":"Charger des données","text":"","code":"add_datafile(   dataset = dataset,   file_name = \"augmente.csv\",   title = \"Données de consommation fictive – chaleur et froid – année 2020\",   description = \"Consommations annuelles et nombre de points de livraison\",   temporal_coverage_start = \"2020-01-01\",   temporal_coverage_end = \"2020-12-31\",   millesime = \"2021-10\" ) #>     intégration du fichier `augmente.csv` #>  * fichier versé #>  * fichier validé #>  * fichier intégré       rid: bb7313fc-f924-4fc0-943f-4915cb7f00f6       millesime: 2021-10      lignes: 20"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"ajouter-un-fichier-annexe","dir":"Articles","previous_headings":"Créer un dataset","what":"ajouter un fichier annexe","title":"Charger des données","text":"","code":"add_attachment(     dataset = dataset,     file_name = 'annexe.txt',     title = \"Liste des variables - chaleur et froid\",     description = \"Détail des variables - fichiers chaleur et froid\" ) #>     intégration du fichier annexe `annexe.txt` #>  * fichier versé #>  * fichier annexe intégré (rid: 74f474cf-63f4-46b3-8d25-c08ff439f229)"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"ajouter-un-millésime-à-un-datafile-existant","dir":"Articles","previous_headings":"","what":"ajouter un millésime à un datafile existant","title":"Charger des données","text":"La procédure est simple : chercher le datafile à modifier ajouter le millésime si nécessaire, changer les couvertures temporelles du datafile et du dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"chercher-le-datafile-à-modifier","dir":"Articles","previous_headings":"ajouter un millésime à un datafile existant","what":"chercher le datafile à modifier","title":"Charger des données","text":"Pour ajouter un millésime vous devez d’abord récupérer le fichier de données. Vous pouvez le chercher par son titre avec la fonction get_datafile(). Cette fonction retourne beaucoup d’information non pertinentes dans le cadre d’une mise à jour, vous pouvez utiliser clean_metadata() :","code":"datafile <- get_datafile(title = \"Données de consommation fictive – chaleur et froid – année 2020\") %>%   clean_metadata() datafile #> List of 10 #>  $ rid              : chr \"bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ title            : chr \"Données de consommation fictive – chaleur et froid – année 2020\" #>  $ description      : chr \"Consommations annuelles et nombre de points de livraison\" #>  $ millesimes       : int 1 #>  $ created_at       : chr \"2022-01-24T13:33:20.289000\" #>  $ last_modified    : chr \"2022-01-24T13:33:20.385000\" #>  $ published        : chr \"2022-01-24T00:00:00\" #>  $ url              : chr \"http://catalogue.diffusion.dido.fr/dataset/61eeaa9019103a970d5cae3f/datafile/bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ temporal_coverage:List of 2 #>   ..$ start: chr \"2020-01-01T00:00:00.000Z\" #>   ..$ end  : chr \"2020-12-31T00:00:00.000Z\" #>  $ legal_notice     : chr \"SDES\" #>  - attr(*, \"id\")= chr \"61eeaa9019103a970d5cae3f\" #>  - attr(*, \"class\")= chr [1:2] \"dido_datafile\" \"list\""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"ajouter-le-millésime-à-ce-datafile","dir":"Articles","previous_headings":"ajouter un millésime à un datafile existant","what":"ajouter le millésime à ce datafile","title":"Charger des données","text":"","code":"millesime <- add_millesime(   datafile = datafile,   file_name = \"augmente.csv\",   millesime = \"2022-10\" )"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"mettre-à-jour-les-métadonnées-du-dataset-et-du-datafile","dir":"Articles","previous_headings":"ajouter un millésime à un datafile existant","what":"Mettre à jour les métadonnées du dataset et du datafile","title":"Charger des données","text":"Trois métadonnées peuvent devoir être mises à jour : la couverture temporelle du datafile la couverture temporelle du dataset la date de prochaine mise à jour du dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"mettre-à-jour-les-métadonnées-du-datafile","dir":"Articles","previous_headings":"ajouter un millésime à un datafile existant > Mettre à jour les métadonnées du dataset et du datafile","what":"mettre à jour les métadonnées du datafile","title":"Charger des données","text":"Tout d’abord récupérer les métadonnées : Modifier la ou les métadonnées concernées et faire la mise à jour :","code":"datafile <- get_datafile(millesime)  %>% clean_metadata() datafile #> List of 10 #>  $ rid              : chr \"bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ title            : chr \"Données de consommation fictive – chaleur et froid – année 2020\" #>  $ description      : chr \"Consommations annuelles et nombre de points de livraison\" #>  $ millesimes       : int 2 #>  $ created_at       : chr \"2022-01-24T13:33:20.289000\" #>  $ last_modified    : chr \"2022-01-24T13:33:50.552000\" #>  $ published        : chr \"2022-01-24T00:00:00\" #>  $ url              : chr \"http://catalogue.diffusion.dido.fr/dataset/61eeaa9019103a970d5cae3f/datafile/bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ temporal_coverage:List of 2 #>   ..$ start: chr \"2020-01-01T00:00:00.000Z\" #>   ..$ end  : chr \"2020-12-31T00:00:00.000Z\" #>  $ legal_notice     : chr \"SDES\" #>  - attr(*, \"id\")= tibble [1 × 1] (S3: tbl_df/tbl/data.frame) #>   ..$ id: chr \"61eeaa9019103a970d5cae3f\" #>  - attr(*, \"class\")= chr [1:2] \"dido_datafile\" \"list\" datafile$temporal_coverage$end <- \"2021-12-31\" update_datafile(datafile)"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"mettre-à-jour-les-métadonnées-du-dataset","dir":"Articles","previous_headings":"ajouter un millésime à un datafile existant > Mettre à jour les métadonnées du dataset et du datafile","what":"mettre à jour les métadonnées du dataset","title":"Charger des données","text":"Encore une fois, commencer par récupérer les métadonnées du dataset : Puis modifier les métadonnées concernées et faire la mise à jour. Dans ce cas là met à jour la date de fin de couverture temporelle et la date de prochaine mise à jour : L’ajout du millésime est terminé.","code":"dataset <- get_dataset(datafile) %>% clean_metadata() dataset #> List of 14 #>  $ id               : chr \"61eeaa9019103a970d5cae3f\" #>  $ title            : chr \"Données de consommation fictive\" #>  $ description      : chr \"test\" #>  $ organization     :List of 2 #>   ..$ id   : chr \"61dc9e68ceaec2e8bef3f0a1\" #>   ..$ title: chr \"BSI\" #>  $ topic            : chr \"Transports\" #>  $ license          : chr \"fr-lo\" #>  $ frequency        : chr \"annual\" #>  $ created_at       : chr \"2022-01-24T13:33:04.228000\" #>  $ last_modified    : chr \"2022-01-24T13:33:59.650000\" #>  $ last_update      : chr \"2022-01-24T00:00:00\" #>  $ frequency_date   : chr \"2021-10-10T00:00:00\" #>  $ tags             : list() #>  $ spatial          :List of 2 #>   ..$ granularity: chr \"other\" #>   ..$ zones      : list() #>  $ temporal_coverage:List of 2 #>   ..$ end  : chr \"2020-12-31\" #>   ..$ start: chr \"2020-01-01\" #>  - attr(*, \"class\")= chr [1:2] \"dido_dataset\" \"list\" dataset$temporal_coverage$end <- \"2021-12-31\" dataset$frequency_date <- \"2022-10-10T00:00:00\" update_dataset(dataset)"},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"remplacer-un-millésime-dun-datafile-existant","dir":"Articles","previous_headings":"","what":"remplacer un millésime d’un datafile existant","title":"Charger des données","text":"Parfois vous voulez remplacer un millésime existant. trouver le datafile récupérer le millésime à mettre à jour mettre à jour le millésime Pour mettre à jour le dernier millésime d’un fichier de données, la procédure est :","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"trouver-le-datafile","dir":"Articles","previous_headings":"remplacer un millésime d’un datafile existant","what":"trouver le datafile","title":"Charger des données","text":"","code":"datafile <- get_datafile(title = \"Données de consommation fictive – chaleur et froid – année 2020\") %>%   clean_metadata() datafile #> List of 10 #>  $ rid              : chr \"bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ title            : chr \"Données de consommation fictive – chaleur et froid – année 2020\" #>  $ description      : chr \"Consommations annuelles et nombre de points de livraison\" #>  $ millesimes       : int 2 #>  $ created_at       : chr \"2022-01-24T13:33:20.289000\" #>  $ last_modified    : chr \"2022-01-24T13:33:59.650000\" #>  $ published        : chr \"2022-01-24T00:00:00\" #>  $ url              : chr \"http://catalogue.diffusion.dido.fr/dataset/61eeaa9019103a970d5cae3f/datafile/bb7313fc-f924-4fc0-943f-4915cb7f00f6\" #>  $ temporal_coverage:List of 2 #>   ..$ start: chr \"2020-01-01T00:00:00.000Z\" #>   ..$ end  : chr \"2021-12-31T00:00:00.000Z\" #>  $ legal_notice     : chr \"SDES\" #>  - attr(*, \"id\")= chr \"61eeaa9019103a970d5cae3f\" #>  - attr(*, \"class\")= chr [1:2] \"dido_datafile\" \"list\""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"récupérer-le-millésime-à-modifier","dir":"Articles","previous_headings":"remplacer un millésime d’un datafile existant","what":"récupérer le millésime à modifier","title":"Charger des données","text":"récupére le dernier millesime du datafile","code":"millesime_row <- list_millesimes(datafile) %>% slice_max(order_by = millesime) millesime <- millesime_row[['millesime']] millesime #> [1] \"2022-10\""},{"path":"https://mtes-mct.github.io/didoscalim/articles/didoscalim.html","id":"remplacer-lancien-millésime-par-le-nouveau-fichier","dir":"Articles","previous_headings":"remplacer un millésime d’un datafile existant","what":"remplacer l’ancien millésime par le nouveau fichier","title":"Charger des données","text":"Et le remplace :","code":"millesime <- replace_millesime(   datafile = datafile,   file_name = \"augmente.csv\",   millesime = millesime ) #>     intégration du fichier `augmente.csv` #>  * fichier versé #>  * fichier validé #> * fichier intégré #> (rid: bb7313fc-f924-4fc0-943f-4915cb7f00f6, millesime: 2022-10, lignes: 20"},{"path":"https://mtes-mct.github.io/didoscalim/articles/les-environnements.html","id":"les-environnements-dido","dir":"Articles","previous_headings":"","what":"Les environnements DiDo","title":"Utiliser les environnements","text":"Les données publiées sur l’environnement de production de DiDo (PROD) sont immédiatement mis en ligne et disponibles sur internet. Pour tester vos jeux de données, il est recommander d’utiliser un environnement ECOLE en amont de la publication officielle. Cet environnement permet de valider : le chargement proprement dit les métadonnées associées la qualité statistique","code":""},{"path":"https://mtes-mct.github.io/didoscalim/articles/les-environnements.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Utiliser les environnements","text":"Les environnements se configurent dans le fichier .Renviron. Chaque environnement est configuré par deux lignes comme celles-ci : Où <NOM_ENVIRONNEMENT> peut prendre les valeurs DEV, PREPROD, ECOLE et PROD. Si vous êtes un producteur et que vous avez accès aux environnements ECOLE et PROD, votre fichier .Renviron ressemblera à :","code":"DIDOSCALIM_BASE_PATH_<NOM_ENVIRONNEMENT>=http://api.alimentation.ecole.fr/v1 DIDOSCALIM_API_KEY_<NOM_ENVIRONNEMENT>=ma_clef_api_ecole DIDOSCALIM_BASE_PATH_ECOLE=http://api.alimentation.ecole.fr/v1 DIDOSCALIM_API_KEY_ECOLE=ma_clef_api_ecole  DIDOSCALIM_BASE_PATH_PROD=http://api.alimentation.prod.fr/v1 DIDOSCALIM_API_KEY_PROD=ma_clef_api_prod"},{"path":"https://mtes-mct.github.io/didoscalim/articles/les-environnements.html","id":"choisir-un-environnement","dir":"Articles","previous_headings":"","what":"Choisir un environnement","title":"Utiliser les environnements","text":"Si vous ne sélectionnez pas d’environnement, DiDo prendra automatiquement par défaut le premier configuré dans l’ordre : DEV, PREPROD, ECOLE. Il ne choisira jamais PROD implicitement. Pour sélectionner un environnement, utilisez la commande set_work_env() : Pour revenir à l’environnement par défaut : Vous pouvez à tout moment voir dans quel environnement vous êtes avec la commande get_work_env(). Vous pouvez lister les environnements configués avec la commande list_envs() : et vérifier qu’ils fonctionnent avec la commande check_envs() :","code":"set_work_env(\"PROD\") #> Environnement DiDo actif : PROD set_work_env() #> Environnement DiDo actif : DEV list_envs() #> * Vous avez 3 environnement(s) configuré(s) :  #> ℹ DEV : http://api.alimentation.dido.fr/v1 #> ℹ PREPROD : http://api.alimentation.dido.fr/ #> ℹ PROD : http://api.alimentation.dido.fr/v1 check_envs() #> * Test de connexion: #> ℹ DEV: OK #> x PREPROD: KO: Client error : 404 #> ℹ PROD: OK #> Environnement DiDo actif : DEV"},{"path":"https://mtes-mct.github.io/didoscalim/articles/les-environnements.html","id":"méthode-dalimentation","dir":"Articles","previous_headings":"","what":"Méthode d’alimentation","title":"Utiliser les environnements","text":"Écrivez et testez vos scripts dans l’environnement ECOLE par défaut. Quand vous êtes satisfait du résultat, basculer sur l’environnement de PROD et relancez les scripts.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/authors.html","id":null,"dir":"","previous_headings":"","what":"Auteur·rice·s","title":"Auteur·rice·s et Citation","text":"Nicolas Chuche. Auteur·rice, mainteneur·se.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Auteur·rice·s et Citation","text":"Chuche N (2022). didoscalim: Charger des données dans DiDo. https://mtes-mct.github.io/didoscalim/, https://github.com/MTES-MCT/didoscalim.","code":"@Manual{,   title = {didoscalim: Charger des données dans DiDo},   author = {Nicolas Chuche},   year = {2022},   note = {https://mtes-mct.github.io/didoscalim/, https://github.com/MTES-MCT/didoscalim}, }"},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"didoscalim","dir":"","previous_headings":"","what":"Charger des données dans DiDo","title":"Charger des données dans DiDo","text":"Un package R pour : générer des fichiers CSV au format DiDo (CSV augmenté) automatiser l’alimentation l’outil de diffusion de données DiDo du CGDD/SDES. Ce package est encore en cours de développement.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"exemple","dir":"","previous_headings":"","what":"Exemple","title":"Charger des données dans DiDo","text":"Générer un fichier CSV augmenté à partir d’un fichier CSV normal et le charger dans un dataset. L’intégrer dans DiDo :","code":"library(didoscalim) library(magrittr, quietly = TRUE)  temp_file <- tempfile(fileext = \".csv\")  params = list(   OPERATEUR = list(description = \"Nom de l'opérateur\"),   FILIERE = list(description = \"Filière\"),   CODE_CATEGORIE_CONSOMMATION = list(description = \"Catégorie de la consommation\"),   CODE_SECTEUR_NAF2 = list(description = \"Code NAF à 2 positions du secteur (NAF rev2 2008)\", type = \"naf_division\"),   CONSO = list(description = \"Consommation (en MWh)\", unit = \"MWh\") )  dido_read_delim(\"vignettes/exemple.csv\") %>%   dido_csv(params = params, cog_year = \"2019\") %>%   dido_write_csv(temp_file) dataset <- add_dataset(   title = \"Un jeu de données fictif\",   description = \"Un jeu de données énergie fictif\",   topic = \"Transports\",   temporal_coverage_start = \"2020-01-01\",   temporal_coverage_end = \"2020-12-31\",   frequency = \"annual\",   frequency_date = \"2021-10-10\" )  add_datafile(   dataset = dataset,   file_name = temp_file,   title = \"Données de consommation fictive – gaz – année 2020\",   description = \"Consommations annuelles et nombre de points de livraison de chaleur et froid, par secteur d'activité\",   temporal_coverage_start = \"2020-01-01\",   temporal_coverage_end = \"2020-12-31\",   millesime = \"2021-10\" )"},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Charger des données dans DiDo","text":"Vous pouvez installer ce package depuis GitHub :","code":"# Install from GitHub library(devtools) devtools::install_github(\"mtes-mct/didoscalim\")  library(didoscalim)"},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"Charger des données dans DiDo","text":"utiliser les environnements La configuration de didoscalim se fait dans votre .Renviron. Pour l’éditer vous pouvez utiliser usethis::edit_r_environ(). Ajouter les lignes suivantes (la clef d’API est disponible dans l’interface web d’alimentation dans l’onglet “Mon compte”) : Il est fortement recommandé de tester les chargements avant de les lancer sur PROD, pour cela configurez au minimum les environnements ECOLE et PROD. Pour vérifier que vos environnements sont bien configurés : Par défaut, didoscalim utilisera l’environnement ECOLE. pour basculer sur l’environnement PROD vous pouvez lancer la commande : Vous pouvez à tout moment voir sur quel environnement vous travailler avec la commande get_work_env() Pour rebasculer sur l’environnement ECOLE :","code":"library(didoscalim) readRenviron(\"~/.Renviron\") load_envs() check_envs() set_work_env(\"PROD\") set_work_env()"},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Charger des données dans DiDo","text":"Vous pouvez trouver l’ensemble de la documentation sur la page du projet et en particuler : comment générer un fichier augmenté comment intégrer des nouveaux jeux/fichiers de données utiliser les environnements","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"les-tests","dir":"","previous_headings":"Pour les développeurs","what":"Les tests","title":"Charger des données dans DiDo","text":"Les tests de ce package nécessitent pour le moment un environnement de développement DiDo configuré pour tester les interactions avec l’API.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/index.html","id":"documentation-en-ligne","dir":"","previous_headings":"Pour les développeurs","what":"Documentation en ligne","title":"Charger des données dans DiDo","text":"La documentation ne peut pas (encore ?) être généré par les github actions, il faut donc pour le moment générer le site statiquement à partir d’une poste qui accès à un environnement DiDo de développement. Si vous avez modifié la documentation, avant de pousser une nouvelle vous devez lancer les commandes suivantes :","code":"devtools::build_readme() devtools::document() devtools::build_vignettes() devtools::build_site()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Ajoute un fichier annexe à un dataset — add_attachment","title":"Ajoute un fichier annexe à un dataset — add_attachment","text":"Ajoute un fichier annexe à un dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ajoute un fichier annexe à un dataset — add_attachment","text":"","code":"add_attachment(   dataset,   title,   description,   file_name,   published = NULL,   quiet = NULL )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ajoute un fichier annexe à un dataset — add_attachment","text":"dataset l'id d'un dataset de rattachement, un objet dido_dataset(), dido_datafile() ou dido_job() title le titre du fichier annexe description la description du fichier annexe file_name le nom du fichier à verser published la date de publication, si non précisée, prendra la date du jour quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_attachment.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Ajoute un fichier annexe à un dataset — add_attachment","text":"un objet dido_attachment()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Ajoute un fichier annexe à un dataset — add_attachment","text":"","code":"if (FALSE) { add_attachment(   dataset = \"id\",   title = \"title\",   description = \"description\",   file_name = \"filename\" ) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_datafile.html","id":null,"dir":"Reference","previous_headings":"","what":"Ajoute un datafile à un dataset — add_datafile","title":"Ajoute un datafile à un dataset — add_datafile","text":"Ajoute un datafile à un dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_datafile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ajoute un datafile à un dataset — add_datafile","text":"","code":"add_datafile(   dataset,   title,   description,   file_name,   millesime = NULL,   published = NULL,   temporal_coverage_start = NULL,   temporal_coverage_end = NULL,   legal_notice = \"SDES\",   date_diffusion = NULL,   quiet = NULL )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_datafile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ajoute un datafile à un dataset — add_datafile","text":"dataset l'id d'un dataset, un objet dido_dataset(), dido_datafile() ou dido_job() title le titre du datafile description la description du datafile file_name le nom du fichier à charger millesime le millesime (YYYY-MM). Par défaut prendre la valeur YYYY-MM avec l'année courante et le mois courant published la date de publication du fichier, si non précisée, prend la date du jour. temporal_coverage_start optionnel, la date de début de couverture du fichier de données au format AAAA-MM-JJ temporal_coverage_end optionnel, la date de fin de couverture du fichier de données au format AAAA-MM-JJ legal_notice mention légale, par défaut \"SDES\" date_diffusion la date/heure à laquelle le fichier sera accessible au format ISO 8601 (2021-10-01T08:00:00Z). Si non précisée prend la date du jour à minuit, le fichier est donc immédiatement accessible. quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_datafile.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Ajoute un datafile à un dataset — add_datafile","text":"un objet dido_job()","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_datafile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Ajoute un datafile à un dataset — add_datafile","text":"","code":"if (FALSE) { datafile <- add_datafile(   dataset = dataset$id,   title = \"titre\",   description = \"description\",   token_file = file_id ) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Créé un dataset — add_dataset","title":"Créé un dataset — add_dataset","text":"Créé un dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Créé un dataset — add_dataset","text":"","code":"add_dataset(   title,   description,   topic,   frequency,   tags = NULL,   frequency_date = NULL,   granularity = NULL,   zones = NULL,   organization = my_organization(),   license = \"fr-lo\",   temporal_coverage_start = NULL,   temporal_coverage_end = NULL,   caution = NULL,   quiet = NULL )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Créé un dataset — add_dataset","text":"title le titre du dataset description la description du dataset topic le thème du dataset. Doit être dans \"Environnement\", \"Énergie\", \"Transports\", \"Logement\", \"Changement climatique\" frequency la fréquence de publication des données tags la liste des mots clefs. Si le fichier est déjà publié sur le site SDES, reprend les mêmes. L'ensemble des mots clefs est disponible sur https://data.statistiques.developpement-durable.gouv.fr/dido/api/v1/referentiels/tags/csv?withColumnName=true&withColumnDescription=false. frequency_date la date de prochaine publication. granularity la granularité du jeu de données. Les plus utilisés sont \"fr:region\", \"fr:departement\", \"fr:epci\", \"fr:commune\", \"fr:iris\" et pour les données à l'adresse \"poi\" zones la zone couverte par le jeu de données. country:fr pour France entière, country-subset:fr:metro pour la métropole et country-subset:fr:drom pour les DROM organization l'id de l'organisation sous laquelle vous souhaitez publier le dataset, si vous n'appartenez qu'à une seule organisation, vous n'avez pas à remplir ce champ, didoscalim la prendra par défaut. license la licence des données. \"fr-lo\" par défaut temporal_coverage_start optionnel, la date de début de couverture du jeux de données au format AAAA-MM-JJ temporal_coverage_end optionnel, la date de fin de couverture du jeux de données au format AAAA-MM-JJ caution Les précautions à prendre avec ce jeu de données. Par exemple : \"certaines données peuvent être secrétisées\" quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_dataset.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Créé un dataset — add_dataset","text":"un objet dido_dataset(). Ce dernier sert pour créer par la suite les datafiles et les millésimes.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Créé un dataset — add_dataset","text":"","code":"dataset <- add_dataset(   title = \"le titre du dataset\",   description = \"la description du dataset\",   topic = \"Transports\",   frequency = \"unknown\" ) #> Environnement DiDo actif : DEV #> dataset `le titre du dataset` créé"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_millesime.html","id":null,"dir":"Reference","previous_headings":"","what":"Ajoute un millésime à un datafile — add_millesime","title":"Ajoute un millésime à un datafile — add_millesime","text":"Ajoute un millésime à un datafile","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_millesime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ajoute un millésime à un datafile — add_millesime","text":"","code":"add_millesime(   datafile,   file_name,   date_diffusion = NULL,   millesime = NULL,   quiet = TRUE )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_millesime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ajoute un millésime à un datafile — add_millesime","text":"datafile un objet dido_datafile obtenu par get_datafile() file_name le fichier à charger date_diffusion la date/heure de diffusion au format ISO 8601, si non précisée, le défaut est minuit du jour courant millesime l'identifiant du millésime à publier, si non précisé AAAA-MM avec l'année et le mois courant quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_millesime.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Ajoute un millésime à un datafile — add_millesime","text":"un objet dido_job()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/add_millesime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Ajoute un millésime à un datafile — add_millesime","text":"","code":"if (FALSE) { millesime <- add_millesime(   datafile = datafile,   file_name = \"csv_upload.csv\",   millesime = \"2022-10\" ) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/check_envs.html","id":null,"dir":"Reference","previous_headings":"","what":"Vérifier l'accès aux différents environnements — check_envs","title":"Vérifier l'accès aux différents environnements — check_envs","text":"Affiche un état des connexions aux différents environnements avec le message d'erreur le cas échéant","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/check_envs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vérifier l'accès aux différents environnements — check_envs","text":"","code":"check_envs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/check_envs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Vérifier l'accès aux différents environnements — check_envs","text":"","code":"check_envs() #> * Test de connexion: #> ℹ DEV: OK #> ✖ PREPROD: KO: Client error : 404 #> ℹ PROD: OK #> Environnement DiDo actif : DEV"},{"path":"https://mtes-mct.github.io/didoscalim/reference/clean_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","title":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","text":"Les objets dido_dataset() et dido_datafile() retournés par get_dataset(), get_datafile(), ... portent des informations sur les objets enfants (fichiers annexes, datafile, millésime...). Cette fonction permet de les supprimer pour ne garder que les métadonnées propres à l'objet.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/clean_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","text":"","code":"clean_metadata(data)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/clean_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","text":"data objet dido_dataset, dido_datafile","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/clean_metadata.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","text":"un objet du même type avec uniquement ses métadonnées propres.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/clean_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Prépare un objet pour l'envoyer à DiDo — clean_metadata","text":"","code":"if (FALSE) { clean_metadata(dataset) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/delete_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Supprime un dataset — delete_dataset","title":"Supprime un dataset — delete_dataset","text":"Supprime un dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/delete_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supprime un dataset — delete_dataset","text":"","code":"delete_dataset(dataset)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/delete_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supprime un dataset — delete_dataset","text":"dataset un identifiant de dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/delete_dataset.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Supprime un dataset — delete_dataset","text":"TRUE","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/delete_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Supprime un dataset — delete_dataset","text":"","code":"if (FALSE) { list_datasets() %>%   filter(str_detect(title, \"didoscalim\")) %>%   select(id) %>%   pmap(~ delete_dataset(..1)) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Envoie une requête au serveur DiDo — dido_api","title":"Envoie une requête au serveur DiDo — dido_api","text":"Envoie la requête au serveur et retourne le résultat sous forme d'un objet ou un dataframe si as_dataframe est à TRUE","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Envoie une requête au serveur DiDo — dido_api","text":"","code":"dido_api(   method,   path,   body,   query_params = list(),   headers = c(),   as_tibble = FALSE )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Envoie une requête au serveur DiDo — dido_api","text":"method une des méthodes GET/POST/PUT/DELETE path le chemin de l'api body le body de la requête query_params les paramètres de la requête headers les entêtes de la requête as_tibble TRUE/FALSE si TRUE retourne un tibble à la place d'un objet. Défaut à FALSE","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_api.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Envoie une requête au serveur DiDo — dido_api","text":"un objet json ou un dataframe","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Envoie une requête au serveur DiDo — dido_api","text":"","code":"if (FALSE) { job <- dido_api(method = \"POST\", path = url, body = body) alerts <- dido_api(method = \"GET\", path = \"/datasets/alerts\", as_tibble = TRUE) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"L'objet dido_attachment — dido_attachment","title":"L'objet dido_attachment — dido_attachment","text":"L'objet dido_attachment inclus les champs : rid l'identifiant du jeu de données parent title description created_at last_modified published url : l'url du fichier annexe","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Génère les lignes d'entête du CSV augmenté — dido_csv","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"Génère un dataframe avec les lignes d'entêtes du CSV augmenté comme premières lignes.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"","code":"dido_csv(   data,   params = list(),   locale = readr::default_locale(),   cog_year = format(Sys.time(), \"%Y\") )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"data le dataframe à augmenter params une liste nommée décrivant les caractéristiques des colonnes locale la locale à utiliser cog_year le millésime du COG utilisé si besoin. Par défaut prend l'année en cours","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"un dataframe avec les 4 lignes de description du csv augmenté","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"Certains noms de variable sont connus par didoscalim qui génère automatiquement le type et la description. La liste complète de ces variables et des types/descriptions associés est : L'année AAAA est par défaut l'année courante, vous pouvez la modifier en passant le paramètre cog_year","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Génère les lignes d'entête du CSV augmenté — dido_csv","text":"","code":"if (FALSE) { params <- list(   OPERATEUR = list(description = \"L'opérateur\", type = \"texte\"),   CONSO = list(description = \"La consommation\", unit = \"Mwh\") ) augmente <- dido_csv(data, params = params) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_datafile.html","id":null,"dir":"Reference","previous_headings":"","what":"L'objet dido_datafile — dido_datafile","title":"L'objet dido_datafile — dido_datafile","text":"L'objet dido_datafile et retourné par get_datafile() et peut-être utilisé en paramètre par les fonctions de manipulation de dataset, datafile, millésime et attachement. Il les champs suivants : rid l'identifiant du datafile title description millesimes le nb de millésimes dans le datafile created_at last_modified published url temporal_coverage un liste avec deux champs start et end legal_notice la licence s'appliquant au fichier de données millesimes_info comprenant une liste des millésimes rattachés le dernier champ est supprimé par clean_metadata() L'objet également un attribut id avec l'identifiant du dataset auquel il appartient","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"L'objet dido_dataset — dido_dataset","title":"L'objet dido_dataset — dido_dataset","text":"L'objet dido_dataset est retourné par get_dataset() et add_dataset() et utilisé en paramètre par update_dataset() add_datafile() et create_attachment() Il les champs suivants : id l'identifiant du dataset title description organization topic le thème license frequency la fréquence frequency_date prochaine mise à jour tags une liste de mots clefs spatial une liste avec des champs, la granularity et zones une liste de zones temporal_coverage un liste avec deux champs start et end created_at la date de création last_modified last_update attachments une liste des attachments datafiles une liste des fichiers de données les deux derniers champs sont supprimés par clean_metadata()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_job.html","id":null,"dir":"Reference","previous_headings":"","what":"L'objet dido_job — dido_job","title":"L'objet dido_job — dido_job","text":"L'objet dido_job est retourné par les fonctions add_datafile(), add_millesime() et replace_millesime(), il peut être utilisé en argument pour les fonctions add_dataset(), add_datafile() Il les champs suivant : owner : l'id du propriétaire du job state l'état du job. Devrait être \"complete\" ou \"failed\" data les informations liées à la tâche, le champ dataset_id result : le résultat qui comprend lui même les champs : rid l'identifiant du fichier de données duration le temps de traitement","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_me.html","id":null,"dir":"Reference","previous_headings":"","what":"L'objet dido_me — dido_me","title":"L'objet dido_me — dido_me","text":"L'objet dido_me est retourné par ()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":null,"dir":"Reference","previous_headings":"","what":"Lit un fichier CSV — dido_read_delim","title":"Lit un fichier CSV — dido_read_delim","text":"Cette fonction utilise directement readr::read_delim en enlevant la détection du type des colonnes.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lit un fichier CSV — dido_read_delim","text":"","code":"dido_read_delim(   file,   delim = NULL,   quote = \"\\\"\",   escape_backslash = FALSE,   escape_double = TRUE,   locale = readr::default_locale(),   comment = \"\",   trim_ws = FALSE,   skip = 0,   n_max = Inf,   skip_empty_rows = TRUE )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lit un fichier CSV — dido_read_delim","text":"file Either path file, connection, literal data (either single string raw vector). Files ending .gz, .bz2, .xz, .zip automatically uncompressed. Files starting http://, https://, ftp://, ftps:// automatically downloaded. Remote gz files can also automatically downloaded decompressed. Literal data useful examples tests. recognised literal data, input must either wrapped (), string containing least one new line, vector containing least one string new line. Using value clipboard() read system clipboard. delim Single character used separate fields within record. quote Single character used quote strings. escape_backslash file use backslashes escape special characters? general escape_double backslashes can used escape delimiter character, quote character, add special characters like \\\\n. escape_double file escape quotes doubling ? .e. option TRUE, value \"\"\"\" represents single quote, \\\". locale locale controls defaults vary place place. default locale US-centric (like R), can use locale() create locale controls things like default time zone, encoding, decimal mark, big mark, day/month names. comment string used identify comments. text comment characters silently ignored. trim_ws leading trailing whitespace (ASCII spaces tabs) trimmed field parsing ? skip Number lines skip reading data. comment supplied commented lines ignored skipping. n_max Maximum number lines read. skip_empty_rows blank rows ignored altogether? .e. option TRUE blank rows represented .  FALSE represented NA values columns.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Lit un fichier CSV — dido_read_delim","text":"un tibble dont toutes les colonnes sont de type chr","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Lit un fichier CSV — dido_read_delim","text":"Certaines variables peuvent avoir des valeurs secrétisées représentées par la valeur secret, la détection automatique de readr n'est donc pas fiable et est désactivé à ce niveau. La détection automatique est faite dans la fonction dido_csv().","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_read_delim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Lit un fichier CSV — dido_read_delim","text":"","code":"if (FALSE) { data <- dido_read_delim(\"vignettes/exemple.csv\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","title":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","text":"Enregistre le fichier CSV augmenté utilisé par DiDo.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","text":"","code":"dido_write_csv(data, file)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","text":"data un tibble retourné par dido_csv() file le nom du fichier","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_write_csv.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","text":"le tibble passé en entrée","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/dido_write_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Enregistre le fichier CSV augmenté utilisé par DiDo. — dido_write_csv","text":"","code":"if (FALSE) { write_dido_csv(data, \"/tmp/fichier.csv\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/didoscalim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"didoscalim: Charger des données dans DiDo — didoscalim-package","title":"didoscalim: Charger des données dans DiDo — didoscalim-package","text":"Ce package permet de charger des données dans DiDo en passant par l'API d'alimentation.","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/didoscalim-package.html","id":"auteur","dir":"Reference","previous_headings":"","what":"Auteur","title":"didoscalim: Charger des données dans DiDo — didoscalim-package","text":"Maintainer: Nicolas Chuche nicolas.chuche@developpement-durable.gouv.fr","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/find_by_column.html","id":null,"dir":"Reference","previous_headings":"","what":"cherche dans un tibble — find_by_column","title":"cherche dans un tibble — find_by_column","text":"cherche dans un tibble","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/find_by_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cherche dans un tibble — find_by_column","text":"","code":"find_by_column(data, string, col, return = c(\"id\"))"},{"path":"https://mtes-mct.github.io/didoscalim/reference/find_by_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cherche dans un tibble — find_by_column","text":"data le dataframe/tibble dans lequel rechercher string la chaine à chercher col la colonne dans laquelle chercher return_col vecteur de colonnes à retourner","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/find_by_column.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"cherche dans un tibble — find_by_column","text":"un id","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/find_by_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"cherche dans un tibble — find_by_column","text":"","code":"if (FALSE) { find_by_column(data, \"un titre\", \"title\") find_by_column(data = data, string = \"un titre\", \"title\", c(\"id\", \"rid\")) find_by_column(data = data, string = stringr::fixed(\"rid\"), \"rid\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_alerts.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère les datasets devant être mis à jour — get_alerts","title":"Récupère les datasets devant être mis à jour — get_alerts","text":"Récupère les datasets devant être mis à jour","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_alerts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère les datasets devant être mis à jour — get_alerts","text":"","code":"get_alerts()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_alerts.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère les datasets devant être mis à jour — get_alerts","text":"un tibble des datasets devant être mis à jour","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_alerts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère les datasets devant être mis à jour — get_alerts","text":"","code":"get_alerts() #> # A tibble: 3 × 19 #>   id      title   description  topic license frequency created_at  last_modified #>   <chr>   <chr>   <chr>        <chr> <chr>   <chr>     <chr>       <chr>         #> 1 61ee6c… Un jeu… Un jeu de d… Tran… fr-lo   annual    2022-01-24… 2022-01-24T0… #> 2 61ee58… Un jeu… Un jeu de d… Tran… fr-lo   annual    2022-01-24… 2022-01-24T0… #> 3 61ee57… Un jeu… Un jeu de d… Tran… fr-lo   annual    2022-01-24… 2022-01-24T0… #> # … with 11 more variables: last_update <chr>, frequency_date <chr>, #> #   tags <list>, attachments <list>, datafiles <list>, organization.id <chr>, #> #   organization.title <chr>, spatial.granularity <chr>, spatial.zones <list>, #> #   temporal_coverage.end <chr>, temporal_coverage.start <chr>"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère un attachment — get_attachment","title":"Récupère un attachment — get_attachment","text":"Permet de récupérer les données d'un attachment en utilisant soit son rid soit son titre.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère un attachment — get_attachment","text":"","code":"get_attachment(attachment = NULL, title = NULL, dataset)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupère un attachment — get_attachment","text":"attachment un rid de attachment, un objet dido_attachment() ou dido_job() title le titre d'un attachment dataset l'identifiant d'un dataset ou un objet dido_dataset()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère un attachment — get_attachment","text":"un objet dido_attachment()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Récupère un attachment — get_attachment","text":"Lève une exception si la recherche ne retourne plus ou moins que 1 attachment","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère un attachment — get_attachment","text":"","code":"if (FALSE) { get_attachment(\"rid\", dataset = dataset) get_attachment(title = \"title\", dataset = dataset) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment_rid.html","id":null,"dir":"Reference","previous_headings":"","what":"Retourne l'attachment id de l'objet — get_attachment_rid","title":"Retourne l'attachment id de l'objet — get_attachment_rid","text":"Retourne l'attachment id de l'objet","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment_rid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retourne l'attachment id de l'objet — get_attachment_rid","text":"","code":"get_attachment_rid(data)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment_rid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retourne l'attachment id de l'objet — get_attachment_rid","text":"data un objet dido_attachment ou une chaine","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment_rid.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Retourne l'attachment id de l'objet — get_attachment_rid","text":"le rid de l'attachment","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_attachment_rid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Retourne l'attachment id de l'objet — get_attachment_rid","text":"","code":"if (FALSE) { get_attachment_rid(att) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère un datafile — get_datafile","title":"Récupère un datafile — get_datafile","text":"Permet de récupérer les données d'un datafile en utilisant soit son rid soit son titre.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère un datafile — get_datafile","text":"","code":"get_datafile(datafile = NULL, title = NULL, dataset = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupère un datafile — get_datafile","text":"datafile un rid de datafile, un objet dido_datafile() ou dido_job() title le titre d'un datafile dataset optionnel l'identifiant du dataset ou un objet dido_dataset(), fournir cet argument évite un appel à l'API","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère un datafile — get_datafile","text":"un objet dido_datafile()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Récupère un datafile — get_datafile","text":"Lève une exception si la recherche ne retourne plus ou moins que 1 datafile","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère un datafile — get_datafile","text":"","code":"if (FALSE) { get_datafile(\"rid\") get_datafile(title = \"title\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile_rid.html","id":null,"dir":"Reference","previous_headings":"","what":"Retourne le dafile id de l'objet — get_datafile_rid","title":"Retourne le dafile id de l'objet — get_datafile_rid","text":"Retourne le dafile id de l'objet","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile_rid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retourne le dafile id de l'objet — get_datafile_rid","text":"","code":"get_datafile_rid(data)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile_rid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retourne le dafile id de l'objet — get_datafile_rid","text":"data un objet dido_datafile ou dido_job","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile_rid.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Retourne le dafile id de l'objet — get_datafile_rid","text":"le datafile id","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_datafile_rid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Retourne le dafile id de l'objet — get_datafile_rid","text":"","code":"if (FALSE) { get_datafile_rid(job) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère les métadonnées d'un dataset — get_dataset","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"Permet de récupérer les données d'un dataset en utilisant soit son titre soit un objet dido_datafile(), dido_dataset(), dido_job()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"","code":"get_dataset(data = NULL, title = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"data l'identifiant d'un dataset ou un objet dido_dataset(), dido_job() ou dido_datafile() title le titre du du dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"un objet dido_dataset()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":"d-tails","dir":"Reference","previous_headings":"","what":"Détails","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"Lève une exception si la recherche ne retourne pas exactement 1 dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère les métadonnées d'un dataset — get_dataset","text":"","code":"if (FALSE) { get_dataset(id) get_dataset(id = id) get_dataset(title = \"un titre de dataset\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Retourne le dataset id de l'objet — get_dataset_id","title":"Retourne le dataset id de l'objet — get_dataset_id","text":"Retourne le dataset id de l'objet","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retourne le dataset id de l'objet — get_dataset_id","text":"","code":"get_dataset_id(data)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retourne le dataset id de l'objet — get_dataset_id","text":"data un objet dido_dataset, dido_datafile ou dido_job","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset_id.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Retourne le dataset id de l'objet — get_dataset_id","text":"le dataset id","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_dataset_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Retourne le dataset id de l'objet — get_dataset_id","text":"","code":"if (FALSE) { get_dataset_id(dataset) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupére un job en particulier — get_job","title":"Récupére un job en particulier — get_job","text":"Récupére un job en particulier","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupére un job en particulier — get_job","text":"","code":"get_job(job_id)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupére un job en particulier — get_job","text":"job_id l'id du job","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_job.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupére un job en particulier — get_job","text":"un objet `dido_job()``","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_job.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupére un job en particulier — get_job","text":"","code":"if (FALSE) { job <- get_job(\"1\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_work_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère l'environnement utilisé — get_work_env","title":"Récupère l'environnement utilisé — get_work_env","text":"Si aucun environnement n'été fixé par set_work_env(), get_work_env() retournera le premier environnement configuré en suivant l'ordre : DEV, PREPROD, ECOLE. Il ne fixera jamais PROD implicitement.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_work_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère l'environnement utilisé — get_work_env","text":"","code":"get_work_env(quiet = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_work_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupère l'environnement utilisé — get_work_env","text":"quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, FALSE par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_work_env.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère l'environnement utilisé — get_work_env","text":"une chaine de caractère avec l'environnement utilisé. Exemple \"ECOLE\"","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/get_work_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère l'environnement utilisé — get_work_env","text":"","code":"get_work_env() #> [1] \"DEV\""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_attachments.html","id":null,"dir":"Reference","previous_headings":"","what":"Liste les attachments — list_attachments","title":"Liste les attachments — list_attachments","text":"Retourne la liste des attachments ou si un objet dataset est passé en argument, la liste des attachments de ce dataset.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_attachments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liste les attachments — list_attachments","text":"","code":"list_attachments(dataset = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_attachments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liste les attachments — list_attachments","text":"dataset optionnel, un objet dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_attachments.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Liste les attachments — list_attachments","text":"un tibble avec les attachments","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_attachments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Liste les attachments — list_attachments","text":"","code":"list_attachments() #> # A tibble: 30 × 8 #>    id     rid    title   description   created_at last_modified published url    #>    <chr>  <chr>  <chr>   <chr>         <chr>      <chr>         <chr>     <chr>  #>  1 61ee6… 1fda0… Liste … Détail des v… 2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  2 61ee6… e4a98… didosc… une autre de… 2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  3 61ee6… 44a95… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  4 61ee6… 17abb… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  5 61ee6… c89e9… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  6 61ee6… 42fd5… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  7 61ee6… 550dc… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  8 61ee6… 2f04e… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #>  9 61ee6… e1081… didosc… une autre de… 2022-01-2… 2022-01-24T0… 2022-01-… http:… #> 10 61ee6… 1d853… didosc… test          2022-01-2… 2022-01-24T0… 2022-01-… http:… #> # … with 20 more rows"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datafiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Liste les datafiles — list_datafiles","title":"Liste les datafiles — list_datafiles","text":"Retourne la liste des datafiles ou si un objet dataset est passé en argument, la liste des datafiles de ce dataset.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datafiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liste les datafiles — list_datafiles","text":"","code":"list_datafiles(dataset = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datafiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liste les datafiles — list_datafiles","text":"dataset optionnel, un objet dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datafiles.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Liste les datafiles — list_datafiles","text":"un tibble avec les datafiles","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datafiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Liste les datafiles — list_datafiles","text":"","code":"list_datafiles() #> # A tibble: 40 × 13 #>    id     rid    title description millesimes created_at last_modified published #>    <chr>  <chr>  <chr> <chr>            <int> <chr>      <chr>         <chr>     #>  1 61ee6… a3ae5… Donn… Consommati…          2 2022-01-2… 2022-01-24T0… 2022-01-… #>  2 61ee6… a4f33… Donn… Consommati…          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  3 61ee6… 48e1c… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  4 61ee6… 5116b… dido… description          2 2022-01-2… 2022-01-24T0… 2022-01-… #>  5 61ee6… a719c… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  6 61ee6… 74baa… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  7 61ee6… c6e58… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  8 61ee6… 76e20… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #>  9 61ee6… 7d2bb… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #> 10 61ee6… d8465… dido… description          1 2022-01-2… 2022-01-24T0… 2022-01-… #> # … with 30 more rows, and 5 more variables: url <chr>, millesimes_info <list>, #> #   legal_notice <chr>, temporal_coverage.start <chr>, #> #   temporal_coverage.end <chr>"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère la liste des datasets — list_datasets","title":"Récupère la liste des datasets — list_datasets","text":"Récupère la liste des datasets","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère la liste des datasets — list_datasets","text":"","code":"list_datasets()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datasets.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère la liste des datasets — list_datasets","text":"un tibble des datasets de l'utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère la liste des datasets — list_datasets","text":"","code":"list_datasets() #> # A tibble: 90 × 20 #>    id     title    description  topic license frequency created_at last_modified #>    <chr>  <chr>    <chr>        <chr> <chr>   <chr>     <chr>      <chr>         #>  1 61ee6… le titr… la descript… Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  2 61ee6… Données… test         Tran… fr-lo   annual    2022-01-2… 2022-01-24T0… #>  3 61ee6… Un jeu … Un jeu de d… Tran… fr-lo   annual    2022-01-2… 2022-01-24T0… #>  4 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  5 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  6 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  7 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  8 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #>  9 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #> 10 61ee6… didosca… test         Tran… fr-lo   unknown   2022-01-2… 2022-01-24T0… #> # … with 80 more rows, and 12 more variables: last_update <chr>, tags <list>, #> #   attachments <list>, datafiles <list>, frequency_date <chr>, caution <chr>, #> #   organization.id <chr>, organization.title <chr>, spatial.granularity <chr>, #> #   spatial.zones <list>, temporal_coverage.end <chr>, #> #   temporal_coverage.start <chr>"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_envs.html","id":null,"dir":"Reference","previous_headings":"","what":"Liste les environnements configurés — list_envs","title":"Liste les environnements configurés — list_envs","text":"Liste les environnements configurés avec les URL associées.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_envs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liste les environnements configurés — list_envs","text":"","code":"list_envs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_envs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Liste les environnements configurés — list_envs","text":"","code":"list_envs() #> * Vous avez 3 environnement(s) configuré(s) :  #> ℹ DEV : http://api.alimentation.dido.fr/v1 #> ℹ PREPROD : http://api.alimentation.dido.fr/ #> ℹ PROD : http://api.alimentation.dido.fr/v1"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_jobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère tous les jobs liés à un utilisateur — list_jobs","title":"Récupère tous les jobs liés à un utilisateur — list_jobs","text":"Récupère tous les jobs liés à un utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_jobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère tous les jobs liés à un utilisateur — list_jobs","text":"","code":"list_jobs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_jobs.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère tous les jobs liés à un utilisateur — list_jobs","text":"un tibble de jobs","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_jobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère tous les jobs liés à un utilisateur — list_jobs","text":"","code":"jobs <- list_jobs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_millesimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Liste les millesimes — list_millesimes","title":"Liste les millesimes — list_millesimes","text":"Liste les millesimes","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_millesimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liste les millesimes — list_millesimes","text":"","code":"list_millesimes(datafile = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_millesimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liste les millesimes — list_millesimes","text":"datafile un objet datafile, optionnel","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_millesimes.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Liste les millesimes — list_millesimes","text":"un tibble avec les millesimes du datafile","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/list_millesimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Liste les millesimes — list_millesimes","text":"","code":"list_millesimes() #> # A tibble: 45 × 10 #>    id     rid     millesime date_diffusion  rows headers columns extendedFilters #>    <chr>  <chr>   <chr>     <chr>          <int> <list>  <list>  <list>          #>  1 61ee6… a3ae53… 2021-10   2022-01-24T00…    20 <df [1… <df [1… <list [0]>      #>  2 61ee6… a3ae53… 2022-10   2022-01-24T10…    20 <df [1… <df [1… <list [0]>      #>  3 61ee6… a4f339… 2021-10   2022-01-24T00…    20 <df [8… <df [1… <df [1 × 3]>    #>  4 61ee6… 48e1c5… 2022-01   2022-01-24T10…    17 <df [3… <df [3… <list [0]>      #>  5 61ee6… 5116b5… 2022-01   2022-01-24T00…    17 <df [3… <df [3… <list [0]>      #>  6 61ee6… 5116b5… 2022-10   2022-01-24T10…    17 <df [3… <df [3… <list [0]>      #>  7 61ee6… a719c6… 2022-01   2022-01-24T00…    17 <df [3… <df [3… <list [0]>      #>  8 61ee6… 74baad… 2022-01   2022-01-24T00…    17 <df [3… <df [3… <list [0]>      #>  9 61ee6… c6e585… 2022-01   2022-01-24T00…    17 <df [3… <df [3… <list [0]>      #> 10 61ee6… 76e203… 2022-01   2022-01-24T00…    17 <df [3… <df [3… <list [0]>      #> # … with 35 more rows, and 2 more variables: geoFields <list>, refs <list>"},{"path":"https://mtes-mct.github.io/didoscalim/reference/load_envs.html","id":null,"dir":"Reference","previous_headings":"","what":"Recharge les environnements — load_envs","title":"Recharge les environnements — load_envs","text":"Cette commande permet de recharger les environnements si vous avez modifié le Renviron. Vous devez d'abord le relire avec readRenviron()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/load_envs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recharge les environnements — load_envs","text":"","code":"load_envs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/load_envs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Recharge les environnements — load_envs","text":"","code":"readRenviron(\"~/.Renviron\") load_envs()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/me.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère les informations de l'utilisateur — me","title":"Récupère les informations de l'utilisateur — me","text":"Récupère les informations de l'utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère les informations de l'utilisateur — me","text":"","code":"me()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/me.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère les informations de l'utilisateur — me","text":"Les informations de l'utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère les informations de l'utilisateur — me","text":"","code":"user <- me()"},{"path":"https://mtes-mct.github.io/didoscalim/reference/my_organization.html","id":null,"dir":"Reference","previous_headings":"","what":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","title":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","text":"Si l'utilisateur appartient à plusieurs organisations","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/my_organization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","text":"","code":"my_organization(name = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/my_organization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","text":"name name acronym organization, default NULL","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/my_organization.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","text":"un id d'organisation","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/my_organization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Récupère l'ID de l'organisation de l'utilisateur. — my_organization","text":"","code":"organization_id <- my_organization() organization_id <- my_organization(name = \"BSI\")"},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Remplace un fichier annexe — replace_attachment","title":"Remplace un fichier annexe — replace_attachment","text":"Remplace un fichier annexe","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remplace un fichier annexe — replace_attachment","text":"","code":"replace_attachment(attachment, file_name, published = NULL, quiet = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remplace un fichier annexe — replace_attachment","text":"attachment un objet dido_attachment() ou un rid file_name le nom du fichier à verser published la date de publication, si non précisée, prendra la date du jour quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_attachment.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Remplace un fichier annexe — replace_attachment","text":"un objet dido_attachment()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Remplace un fichier annexe — replace_attachment","text":"","code":"if (FALSE) { replace_attachment(   attachment = \"id\",   file_name = \"filename\" ) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_millesime.html","id":null,"dir":"Reference","previous_headings":"","what":"Remplacer un millésime — replace_millesime","title":"Remplacer un millésime — replace_millesime","text":"Remplacer un millésime","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_millesime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remplacer un millésime — replace_millesime","text":"","code":"replace_millesime(   datafile,   file_name,   millesime,   date_diffusion = NULL,   quiet = NULL )"},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_millesime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remplacer un millésime — replace_millesime","text":"datafile un objet dido_datafile obtenu par get_datafile() file_name le fichier à charger millesime l'identifiant du millésime à publier, si non précisé AAAA-MM avec l'année et le mois courant date_diffusion la date/heure de diffusion au format ISO 8601, si non précisée, le défaut est minuit du jour courant quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, NULL par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_millesime.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Remplacer un millésime — replace_millesime","text":"un objet dido_job()","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/replace_millesime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Remplacer un millésime — replace_millesime","text":"","code":"if (FALSE) { datafile <- get_datafile(\"rid\") millesime <- replace_millesime(   datafile = datafile,   file_name = \"csv_upload.csv\",   millesime = \"2022-10\" ) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/set_work_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixe l'environnement DiDo à utiliser — set_work_env","title":"Fixe l'environnement DiDo à utiliser — set_work_env","text":"Fixe l'environnement DiDo à utiliser","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/set_work_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixe l'environnement DiDo à utiliser — set_work_env","text":"","code":"set_work_env(env_name = NULL, quiet = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/set_work_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixe l'environnement DiDo à utiliser — set_work_env","text":"env_name le nom de l'environnement à utiliser parmi PROD, ECOLE, PREPROD, DEV et suivant ce que vous avez configuré. Si env_name n'est pas passé, set_work_env() choisira le premier environnement configuré parmi DEV, PREPROD et ECOLE mais jamais PROD. quiet quand TRUE ou que l'option dido_quiet est à TRUE supprime les messages d'information, FALSE par défaut","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/set_work_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Fixe l'environnement DiDo à utiliser — set_work_env","text":"","code":"if (FALSE) { set_work_env(\"PROD\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_attachment.html","id":null,"dir":"Reference","previous_headings":"","what":"Mettre à jour un datafile. — update_attachment","title":"Mettre à jour un datafile. — update_attachment","text":"Mettre à jour un datafile.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_attachment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mettre à jour un datafile. — update_attachment","text":"","code":"update_attachment(attachment)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_attachment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mettre à jour un datafile. — update_attachment","text":"attachment un objet attachment retourné par get_attachment() modifié par l'utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_attachment.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Mettre à jour un datafile. — update_attachment","text":"un objet dido_attachment()","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_attachment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Mettre à jour un datafile. — update_attachment","text":"","code":"if (FALSE) { att <- get_attachment(\"rid\") att$title <- \"un nouveau titre\" update_attachment(att) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_datafile.html","id":null,"dir":"Reference","previous_headings":"","what":"Mettre à jour un datafile. — update_datafile","title":"Mettre à jour un datafile. — update_datafile","text":"Mettre à jour un datafile.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_datafile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mettre à jour un datafile. — update_datafile","text":"","code":"update_datafile(datafile)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_datafile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mettre à jour un datafile. — update_datafile","text":"datafile un objet datafile retourné par get_datafile() modifié par l'utilisateur","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_datafile.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Mettre à jour un datafile. — update_datafile","text":"un objet dido_job()","code":""},{"path":[]},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_datafile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Mettre à jour un datafile. — update_datafile","text":"","code":"if (FALSE) { df <- get_datafile(\"rid\") df$temporal_coverage$end <- \"2023-12-31\" update_datafile(df) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Met à jour les metadonnées d'un dataset — update_dataset","title":"Met à jour les metadonnées d'un dataset — update_dataset","text":"Cette fonction permet de mettre à jour les métadonnées d'un dataset comme, par exemple, la date de fin de couverture temporelle.","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Met à jour les metadonnées d'un dataset — update_dataset","text":"","code":"update_dataset(dataset)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Met à jour les metadonnées d'un dataset — update_dataset","text":"dataset un objet dido_dataset modifié","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_dataset.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Met à jour les metadonnées d'un dataset — update_dataset","text":"un objet dataset","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/update_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Met à jour les metadonnées d'un dataset — update_dataset","text":"","code":"if (FALSE) { dataset <- get_dataset(\"id\") %>% clean_metadata() dataset$temporal_coverage$end <- \"2022-12-31\" update_dataset(dataset) }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Verse un fichier de données à intégrer — upload_file","title":"Verse un fichier de données à intégrer — upload_file","text":"Verse un fichier de données à intégrer","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verse un fichier de données à intégrer — upload_file","text":"","code":"upload_file(file_name)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verse un fichier de données à intégrer — upload_file","text":"file_name le nom du fichier","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/upload_file.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Verse un fichier de données à intégrer — upload_file","text":"un token","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Verse un fichier de données à intégrer — upload_file","text":"","code":"if (FALSE) { token <- upload_file(\"mon_fichier.csv\") }"},{"path":"https://mtes-mct.github.io/didoscalim/reference/wait_for_job.html","id":null,"dir":"Reference","previous_headings":"","what":"Attend la fin d'un job d'intégration — wait_for_job","title":"Attend la fin d'un job d'intégration — wait_for_job","text":"Attend la fin d'un job d'intégration","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/wait_for_job.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attend la fin d'un job d'intégration — wait_for_job","text":"","code":"wait_for_job(job_id, quiet = NULL)"},{"path":"https://mtes-mct.github.io/didoscalim/reference/wait_for_job.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attend la fin d'un job d'intégration — wait_for_job","text":"job_id l'id du job","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/wait_for_job.html","id":"valeur-de-retour","dir":"Reference","previous_headings":"","what":"Valeur de retour","title":"Attend la fin d'un job d'intégration — wait_for_job","text":"les données du job","code":""},{"path":"https://mtes-mct.github.io/didoscalim/reference/wait_for_job.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Exemples","title":"Attend la fin d'un job d'intégration — wait_for_job","text":"","code":"if (FALSE) { wait_for_job(\"id\") }"},{"path":"https://mtes-mct.github.io/didoscalim/news/index.html","id":"didoscalim-0019000","dir":"Changelog","previous_headings":"","what":"didoscalim 0.0.1.9000","title":"didoscalim 0.0.1.9000","text":"Première version publiée","code":""}]
